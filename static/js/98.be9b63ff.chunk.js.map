{"version":3,"file":"static/js/98.be9b63ff.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__f4X+T\",\"formTitle\":\"contactForm_formTitle__cG5TD\",\"formLabel\":\"contactForm_formLabel__PNGQI\",\"contactFormInput\":\"contactForm_contactFormInput__iE2Z5\",\"formButton\":\"contactForm_formButton__uIAMr\"};","// import { Component } from 'react';\nimport css from './contactForm.module.css';\nimport { nanoid } from 'nanoid';\n\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiAddContact } from '../../redux/contacts/contactsSlice';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  const handleFromSubmit = event => {\n    event.preventDefault();\n    // const form = event.currentTarget;\n    // console.log(form.elements);\n    // const name = form.elements.name.value;\n    // const phone = form.elements.phone.value;\n    const id = nanoid(5);\n    const formData = { id, name, phone };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in your contacts`);\n      return;\n    }\n\n    dispatch(apiAddContact(formData));\n    // Очистка форми\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleFromSubmit}>\n      <h4 className={css.formTitle}>Name</h4>\n      <label className={css.formLabel}>\n        <input\n          className={css.contactFormInput}\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name} // прив'язка до стану name\n          onChange={e => setName(e.target.value)} //  обробник onChange\n          placeholder=\"Write a name\"\n        />\n      </label>\n\n      <h4 className={css.formTitle}>Number</h4>\n      <label className={css.formLabel}>\n        <input\n          className={css.contactFormInput}\n          type=\"tel\"\n          name=\"number\"\n          required\n          value={phone} //  прив'язка до стану number/phone\n          onChange={e => setPhone(e.target.value)} // Додано обробник onChange\n          placeholder=\"Write a number\"\n          // pattern=\"\\d{3}-\\d{2}-\\d{2}\"\n          title=\"xxx-xx-xx\"\n        />\n      </label>\n      <button type=\"submit\" className={css.formButton}>\n        Add to contacts\n      </button>\n    </form>\n  );\n};\n\nexport { ContactForm };\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"filterText\":\"filter_filterText__SdFw6\",\"filterInput\":\"filter_filterInput__2T6yn\"};","import css from './filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeListener = event => {\n    // const filterValue = event.currentTarget.value;\n    // console.log(filterValue)\n    const filterValue = event.currentTarget.value;\n    dispatch(setFilter(filterValue.trim().toLowerCase()));\n  };\n\n  return (\n    <>\n      <p className={css.filterText}>Find contact by name</p>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeListener}\n      />\n    </>\n  );\n};\n\nexport { Filter };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__rfM1N\",\"contactListItem\":\"contactList_contactListItem__T4ojX\",\"contactListText\":\"contactList_contactListText__fKufX\",\"contactListBtnDelete\":\"contactList_contactListBtnDelete__dljzp\"};","import css from './contactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  apiDeleteContact,\n  apiGetContacts,\n} from '../../redux/contacts/contactsSlice';\nimport { useEffect } from 'react';\nimport { STATUSES } from '../../utils/constants';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const status = useSelector(state => state.contacts.status);\n  const error = useSelector(state => state.contacts.error);\n\n  useEffect(() => {\n    dispatch(apiGetContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const handleDelete = contactId => {\n    // console.log(contactId)\n    dispatch(apiDeleteContact(contactId));\n  };\n\n  return (\n    <>\n      {status === STATUSES.pending && <div>Loading...</div>}\n      {status === STATUSES.error && <div>{error}</div>}\n\n      <ul className={css.contactList}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} className={css.contactListItem}>\n            <p className={css.contactListText}>\n              {contact.name}: {contact.phone}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n              className={css.contactListBtnDelete}\n            >\n              Delete contact\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport { ContactList };\n","import React from 'react'\n// import { useDispatch } from 'react-redux';\n// import { apiRegisterUser } from '../redux/auth/authSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\n\nconst ContactsPage = () => {\n  return (\n      <div\n      style={{\n        // height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default ContactsPage"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","dispatch","useDispatch","contacts","useSelector","state","items","_jsxs","className","css","onSubmit","event","preventDefault","id","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","formData","some","contact","toLowerCase","alert","concat","apiAddContact","children","_jsx","type","required","value","onChange","e","target","placeholder","title","Filter","_Fragment","filterValue","currentTarget","setFilter","trim","ContactList","filter","status","error","useEffect","apiGetContacts","filteredContacts","normalizedFilter","includes","getFilteredContacts","STATUSES","map","onClick","contactId","apiDeleteContact","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}