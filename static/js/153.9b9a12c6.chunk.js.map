{"version":3,"file":"static/js/153.9b9a12c6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","utils/constants.js","components/ContactList/ContactList.jsx","redux/contacts/contactsSlice.selectors.js","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__f4X+T\",\"formTitle\":\"contactForm_formTitle__cG5TD\",\"formLabel\":\"contactForm_formLabel__PNGQI\",\"contactFormInput\":\"contactForm_contactFormInput__iE2Z5\",\"formButton\":\"contactForm_formButton__uIAMr\"};","// import { Component } from 'react';\nimport css from './contactForm.module.css';\n// import { nanoid } from 'nanoid';\n\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiAddContact } from '../../redux/contacts/contactsSlice';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // const form = event.currentTarget;\n    // console.log(form.elements);\n    // const name = form.elements.name.value;\n    // const phone = form.elements.phone.value;\n    // const id = nanoid(5);\n    // const formData = { id, name, phone };\n    const formData = { name, phone };\n    console.log(formData)\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in your contacts`);\n      return;\n    }\n\n    dispatch(apiAddContact(formData));\n    // Очистка форми\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleFormSubmit}>\n      <h4 className={css.formTitle}>Name</h4>\n      <label className={css.formLabel}>\n        <input\n          className={css.contactFormInput}\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name} // прив'язка до стану name\n          onChange={e => setName(e.target.value)} //  обробник onChange\n          placeholder=\"Write a name\"\n        />\n      </label>\n\n      <h4 className={css.formTitle}>Number</h4>\n      <label className={css.formLabel}>\n        <input\n          className={css.contactFormInput}\n          type=\"tel\"\n          name=\"number\"\n          required\n          value={phone} //  прив'язка до стану number/phone\n          onChange={e => setPhone(e.target.value)} // Додано обробник onChange\n          placeholder=\"Write a number\"\n          // pattern=\"\\d{3}-\\d{2}-\\d{2}\"\n          title=\"xxx-xx-xx\"\n        />\n      </label>\n      <button type=\"submit\" className={css.formButton}>\n        Add to contacts\n      </button>\n    </form>\n  );\n};\n\nexport { ContactForm };\n","// extracted by mini-css-extract-plugin\nexport default {\"filterText\":\"filter_filterText__SdFw6\",\"filterInput\":\"filter_filterInput__2T6yn\"};","import css from './filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeListener = event => {\n    // const filterValue = event.currentTarget.value;\n    // console.log(filterValue)\n    const filterValue = event.currentTarget.value;\n    dispatch(setFilter(filterValue.trim().toLowerCase()));\n  };\n\n  return (\n    <>\n      <p className={css.filterText}>Find contact by name</p>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeListener}\n      />\n    </>\n  );\n};\n\nexport { Filter };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__rfM1N\",\"contactListItem\":\"contactList_contactListItem__T4ojX\",\"contactListText\":\"contactList_contactListText__fKufX\",\"contactListBtnDelete\":\"contactList_contactListBtnDelete__dljzp\"};","export const STATUSES = {\n    idle: 'idle',\n    pending: 'pending',\n    success: 'success',\n    error: 'error',\n  };","import css from './contactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  apiDeleteContact,\n  apiGetContacts,\n} from '../../redux/contacts/contactsSlice';\nimport { useEffect } from 'react';\nimport { STATUSES } from '../../utils/constants';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const status = useSelector(state => state.contacts.status);\n  const error = useSelector(state => state.contacts.error);\n\n  useEffect(() => {\n    dispatch(apiGetContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter?.toLowerCase(); ///////////////////?\n    return contacts?.filter(contact => /////////////////////////  ?\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const handleDelete = contactId => {\n    // console.log(contactId)\n    dispatch(apiDeleteContact(contactId));\n  };\n\n  return (\n    <>\n      {status === STATUSES.pending && <div>Loading...</div>}\n      {status === STATUSES.error && <div>{error}</div>}\n\n      <ul className={css.contactList}>\n        {filteredContacts?.map(contact => ( ////////////////////////?\n          <li key={contact.id} className={css.contactListItem}>\n            <p className={css.contactListText}>\n              {contact.name}: {contact.phone}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n              className={css.contactListBtnDelete}\n            >\n              Delete contact\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport { ContactList };\n","export const selectContacts = state => state.contacts.contacts;\nexport const selectContactsError = state => state.contacts.error;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;","import React, { useEffect } from 'react'\n// import { useDispatch } from 'react-redux';\n// import { apiRegisterUser } from '../redux/auth/authSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectContactsError, selectContactsIsLoading } from '../../redux/contacts/contactsSlice.selectors';\nimport { apiGetContacts } from '../../redux/contacts/contactsSlice';\n\n\nconst ContactsPage = () => {\nconst dispatch = useDispatch();\n\nconst contacts = useSelector(selectContacts);\nconst isLoading = useSelector(selectContactsIsLoading);\nconst error = useSelector(selectContactsError);\n\nconsole.log(`contacts: ${contacts}, loading: ${isLoading}, error: ${error}`);\n\nuseEffect(() => {\n  dispatch(apiGetContacts())\n}, [dispatch])\n\n  return (\n      <div\n      style={{\n        // height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default ContactsPage"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","dispatch","useDispatch","contacts","useSelector","state","items","_jsxs","className","css","onSubmit","event","preventDefault","formData","console","log","some","contact","toLowerCase","alert","concat","apiAddContact","children","_jsx","type","required","value","onChange","e","target","placeholder","title","Filter","_Fragment","filterValue","currentTarget","setFilter","trim","STATUSES","ContactList","filter","status","error","useEffect","apiGetContacts","filteredContacts","normalizedFilter","includes","getFilteredContacts","map","onClick","contactId","id","apiDeleteContact","selectContacts","selectContactsError","selectContactsIsLoading","isLoading","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}