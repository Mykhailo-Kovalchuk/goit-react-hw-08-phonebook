{"version":3,"file":"static/js/57.90a421a2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","utils/constants.js","components/ContactList/ContactList.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__f4X+T\",\"formTitle\":\"contactForm_formTitle__cG5TD\",\"formLabel\":\"contactForm_formLabel__PNGQI\",\"contactFormInput\":\"contactForm_contactFormInput__iE2Z5\",\"formButton\":\"contactForm_formButton__uIAMr\"};","// import { Component } from 'react';\nimport css from './contactForm.module.css';\n// import { nanoid } from 'nanoid';\n\n// import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiAddContact } from '../../redux/contacts/contactsSlice';\n\nconst ContactForm = () => {\n  // const [name, setName] = useState('');\n  // const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  // console.log(contacts)\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // const form = event.currentTarget;\n    // console.log(form.elements);\n    // const name = form.elements.name.value;\n    // const phone = form.elements.phone.value;\n    // const id = nanoid(5);\n    // const formData = { id, name, phone };\n   \n    const name = event.currentTarget.elements.contactName.value;\n    const number = event.currentTarget.elements.contactNumber.value;\n    const formData = { name, number };\n    console.log(formData)\n\n    if (\n      contacts?.some(\n        contact => contact.name && contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in your contacts`);\n      return;\n    }\n\n    dispatch(apiAddContact(formData))\n    .unwrap()\n    .then(() => {\n      console.log('Contact was successfully added!');\n    }).catch((error) => console.error());;\n    // Очистка форми\n    // setName('');\n    // setPhone('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleFormSubmit}>\n      <h4 className={css.formTitle}>Name</h4>\n      <label className={css.formLabel}>\n        <input\n          className={css.contactFormInput}\n          type=\"text\"\n          name=\"contactName\"\n          required\n          // value={name} // прив'язка до стану name\n          // onChange={e => setName(e.target.value)} //  обробник onChange\n          placeholder=\"Write a name\"\n        />\n      </label>\n\n      <h4 className={css.formTitle}>Number</h4>\n      <label className={css.formLabel}>\n        <input\n          className={css.contactFormInput}\n          type=\"tel\"\n          name=\"contactNumber\"\n          required\n          // value={phone} //  прив'язка до стану number/phone\n          // onChange={e => setPhone(e.target.value)} // Додано обробник onChange\n          placeholder=\"Write a number\"\n          // pattern=\"\\d{3}-\\d{2}-\\d{2}\"\n          title=\"xxx-xx-xx\"\n        />\n      </label>\n      <button type=\"submit\" className={css.formButton}>\n        Add to contacts\n      </button>\n    </form>\n  );\n};\n\nexport { ContactForm };\n","// extracted by mini-css-extract-plugin\nexport default {\"filterText\":\"filter_filterText__SdFw6\",\"filterInput\":\"filter_filterInput__2T6yn\"};","import css from './filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeListener = event => {\n    // const filterValue = event.currentTarget.value;\n    // console.log(filterValue)\n    const filterValue = event.currentTarget.value;\n    dispatch(setFilter(filterValue.trim().toLowerCase()));\n  };\n\n  return (\n    <>\n      <p className={css.filterText}>Find contact by name</p>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeListener}\n      />\n    </>\n  );\n};\n\nexport { Filter };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__rfM1N\",\"contactListItem\":\"contactList_contactListItem__T4ojX\",\"contactListText\":\"contactList_contactListText__fKufX\",\"contactListBtnDelete\":\"contactList_contactListBtnDelete__dljzp\"};","export const STATUSES = {\n    idle: 'idle',\n    pending: 'pending',\n    success: 'success',\n    error: 'error',\n  };","import css from './contactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  apiDeleteContact,\n  apiGetContacts,\n} from '../../redux/contacts/contactsSlice';\nimport { useEffect } from 'react';\nimport { STATUSES } from '../../utils/constants';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const status = useSelector(state => state.contacts.status);\n  const error = useSelector(state => state.contacts.error);\n\n  useEffect(() => {\n    dispatch(apiGetContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter?.toLowerCase(); ///////////////////?\n    // console.log(normalizedFilter)\n    // console.log(contacts);\n    return contacts?.filter(contact => /////////////////////////  ?\n    contact.name && contact.name.toLowerCase().includes(normalizedFilter)\n\n      // contact.name\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const handleDelete = contactId => {\n    // console.log(contactId)\n    dispatch(apiDeleteContact(contactId));\n  };\n\n  return (\n    <>\n      {status === STATUSES.pending && <div>Loading...</div>}\n      {status === STATUSES.error && <div>{error}</div>}\n\n      <ul className={css.contactList}>\n        {filteredContacts?.map(contact => ( ////////////////////////?\n          <li key={contact.id} className={css.contactListItem}>\n            <p className={css.contactListText}>\n              {contact.name}: {contact.number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n              className={css.contactListBtnDelete}\n            >\n              Delete contact\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport { ContactList };\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\n// import { apiRegisterUser } from '../redux/auth/authSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectContacts, selectContactsError, selectContactsIsLoading } from '../../redux/contacts/contactsSlice.selectors';\nimport { apiGetContacts } from '../../redux/contacts/contactsSlice';\n\n\nconst ContactsPage = () => {\nconst dispatch = useDispatch();\n\n// const contacts = useSelector(selectContacts);\n// const isLoading = useSelector(selectContactsIsLoading);\n// const error = useSelector(selectContactsError);\n\n// console.log(`contacts: ${contacts}, loading: ${isLoading}, error: ${error}`);\n\nuseEffect(() => {\n  dispatch(apiGetContacts())\n}, [dispatch])\n\n  return (\n      <div\n      style={{\n        // height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default ContactsPage"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","_jsxs","className","css","onSubmit","event","preventDefault","name","currentTarget","elements","contactName","value","number","contactNumber","formData","console","log","some","contact","toLowerCase","alert","concat","apiAddContact","unwrap","then","catch","error","children","_jsx","type","required","placeholder","title","Filter","_Fragment","onChange","filterValue","setFilter","trim","STATUSES","ContactList","filter","status","useEffect","apiGetContacts","filteredContacts","normalizedFilter","includes","getFilteredContacts","map","onClick","contactId","id","apiDeleteContact","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}